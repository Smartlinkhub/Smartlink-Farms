import { Wallet } from '../../wallet';
import { ContractProvider } from '../../contract';
import { ContractMethodObject } from './contract-method-object-param';
import { ContractMethod } from './contract-method-flat-param';
import { ParameterSchema } from '@taquito/michelson-encoder';
export declare class ContractMethodFactory<T extends ContractProvider | Wallet> {
    createContractMethodFlatParams(provider: T, address: string, smartContractMethodSchema: ParameterSchema, smartContractMethodName: string, args: any[], isMultipleEntrypoint?: boolean, isAnonymous?: boolean): ContractMethod<T>;
    createContractMethodObjectParam(provider: T, address: string, smartContractMethodSchema: ParameterSchema, smartContractMethodName: string, args: any[], isMultipleEntrypoint?: boolean, isAnonymous?: boolean): ContractMethodObject<T>;
}
